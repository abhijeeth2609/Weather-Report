name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger deployment when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use an Ubuntu-based runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker and login to Docker Hub using GitHub secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.MY_DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Step 3: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest .
          docker push ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest

      # Step 4: Install sshpass (if needed) for SSH login and run the deployment script
      - name: Run deployment script on server
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" << 'EOF'
          # Deployment commands
          echo "Deploying the application"
  
          # Example deployment commands (replace with your own)
          cd /path/to/your/project
          git pull origin main
          docker-compose up -d

          # Other commands you might want to run during deployment
          EOF

        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
