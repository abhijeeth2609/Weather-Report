name: Deploy Weather-Report App

on:
  push:
    branches:
      - main  # Runs this workflow when changes are pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Uses an Ubuntu virtual machine for the build process

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Fetches the latest code from GitHub

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Enables advanced Docker features

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.MY_DOCKER_USER }}  # Use your Docker Hub username stored in secrets
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}  # Use your Docker Hub password stored in secrets

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest .  # Build the image and tag it with the correct name
          docker push ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest  # Push the image to Docker Hub

  deploy:
    needs: build  # Ensures deployment happens after the build job completes
    runs-on: ubuntu-latest  # Uses an Ubuntu virtual machine for deployment

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master  # Uses an SSH action to execute commands on the server
        with:
          host: ${{ secrets.SERVER_IP }}  # The IP address of your server
          username: ${{ secrets.SERVER_USER }}  # The username for your server
          password: ${{ secrets.SERVER_PASSWORD }}  # The password for your server
          port: 22  # Default SSH port
          script: |
            # Stop the old container (if any) and remove it
            docker stop weather-container || true
            docker rm weather-container || true

            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest

            # Run the new Docker container
            docker run -d --name weather-container -p 80:80 ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest
