name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger deployment when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use an Ubuntu-based runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Install sshpass
      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      # Step 3: Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

      # Step 6: Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Step 7: Run deployment script on the server
      - name: Run deployment script on server
        run: |
          # Use sshpass to deploy to the remote server
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" << 'EOF'
          # Deployment commands
          echo "Deploying the application"

          # Example deployment commands (replace with your own)
          cd /path/to/your/project
          git pull origin main
          docker-compose up -d
          
          # Other commands you might want to run during deployment
          EOF
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
