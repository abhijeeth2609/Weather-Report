name: Deploy Weather-App

on:
  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu virtual machine for the build process

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Fetch the latest code from GitHub

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Enables advanced Docker features

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.MY_DOCKER_USER }}  # Your Docker Hub username stored as a secret
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}  # Your Docker Hub password (or token) stored as a secret

      - name: Build and Push Docker Image
        run: |
          # Make sure Dockerfile is in the root directory or specify the correct path if it's elsewhere
          docker build -t ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest .
          docker push ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest  # Push the built image to Docker Hub

  deploy:
    needs: build  # Ensure deployment happens after the build is complete
    runs-on: ubuntu-latest  # Run the deployment process on an Ubuntu machine

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}  # The server's IP address
          username: ${{ secrets.SERVER_USER }}  # SSH username to access the server
          private-key: ${{ secrets.SERVER_SSH_KEY }}  # Your SSH private key stored as a secret
          script: |
            # Pull the latest Docker image from Docker Hub and run it
            docker pull ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest
            docker stop weather-container || true
            docker rm weather-container || true
            docker run -d --name weather-container -p 80:80 ${{ secrets.MY_DOCKER_USER }}/weatherapp:latest
